// Code generated by mockery v2.40.1. DO NOT EDIT.

package usecases

import (
	mock "github.com/stretchr/testify/mock"
)

// IProductUpdateUseCaseMock is an autogenerated mock type for the IProductUpdateUseCaseMock type
type IProductUpdateUseCaseMock struct {
	mock.Mock
}

// Execute provides a mock function with given fields: productUpdateInput
func (_m *IProductUpdateUseCaseMock) Execute(productUpdateInput ProductUpdateInput) error {
	ret := _m.Called(productUpdateInput)

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(ProductUpdateInput) error); ok {
		r0 = rf(productUpdateInput)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewIProductUpdateUseCaseMock creates a new instance of IProductUpdateUseCaseMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIProductUpdateUseCaseMock(t interface {
	mock.TestingT
	Cleanup(func())
}) *IProductUpdateUseCaseMock {
	mock := &IProductUpdateUseCaseMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
