// Code generated by mockery v2.40.1. DO NOT EDIT.

package mocks

import (
	entities "github.com/uiansol/product-follow-up/internal/application/entities"

	mock "github.com/stretchr/testify/mock"
)

// IProductRepository is an autogenerated mock type for the IProductRepository type
type IProductRepository struct {
	mock.Mock
}

// Save provides a mock function with given fields: user
func (_m *IProductRepository) Save(user entities.Product) (string, error) {
	ret := _m.Called(user)

	if len(ret) == 0 {
		panic("no return value specified for Save")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(entities.Product) (string, error)); ok {
		return rf(user)
	}
	if rf, ok := ret.Get(0).(func(entities.Product) string); ok {
		r0 = rf(user)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(entities.Product) error); ok {
		r1 = rf(user)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewIProductRepository creates a new instance of IProductRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIProductRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *IProductRepository {
	mock := &IProductRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
